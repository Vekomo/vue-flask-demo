{"remainingRequest":"/home/stylo/new-dir/starter-kit/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/stylo/new-dir/starter-kit/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stylo/new-dir/starter-kit/src/views/OSMasterTables.vue?vue&type=template&id=33779285&","dependencies":[{"path":"/home/stylo/new-dir/starter-kit/src/views/OSMasterTables.vue","mtime":1606164517639},{"path":"/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"vs-button\",\n        {\n          attrs: { color: \"primary\", type: \"border\" },\n          on: {\n            click: function($event) {\n              _vm.activePrompt = true\n            }\n          }\n        },\n        [_vm._v(\"\\n    New\\n  \")]\n      ),\n      _c(\n        \"vs-table\",\n        {\n          attrs: { data: _vm.response },\n          scopedSlots: _vm._u([\n            {\n              key: \"default\",\n              fn: function(ref) {\n                var data = ref.data\n                return _vm._l(data, function(entry, index) {\n                  return _c(\n                    \"vs-tr\",\n                    { key: index },\n                    [\n                      _c(\n                        \"vs-td\",\n                        { attrs: { data: data[index].technology_id } },\n                        [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(data[index].technology_id) +\n                              \"\\n      \"\n                          )\n                        ]\n                      ),\n                      _c(\n                        \"vs-td\",\n                        { attrs: { data: data[index].OS_technology_name } },\n                        [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(data[index].OS_technology_name) +\n                              \"\\n      \"\n                          )\n                        ]\n                      ),\n                      _c(\n                        \"vs-td\",\n                        { attrs: { data: data[index].OS_tech_dependant_tags } },\n                        [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(data[index].OS_tech_dependant_tags) +\n                              \"\\n      \"\n                          )\n                        ]\n                      ),\n                      _c(\n                        \"vs-td\",\n                        { attrs: { data: data[index].OS_tech_description } },\n                        [\n                          _vm._v(\n                            \"\\n        \" +\n                              _vm._s(data[index].OS_tech_description) +\n                              \"\\n      \"\n                          )\n                        ]\n                      ),\n                      _c(\n                        \"vs-td\",\n                        [\n                          _c(\"vs-button\", {\n                            attrs: { icon: \"edit\", size: \"small\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.editOS(data[index])\n                              }\n                            }\n                          }),\n                          _c(\"vs-button\", {\n                            attrs: {\n                              icon: \"delete\",\n                              color: \"danger\",\n                              size: \"small\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.onDeleteEntry(data[index])\n                              }\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                })\n              }\n            }\n          ])\n        },\n        [\n          _c(\"template\", { slot: \"header\" }, [\n            _c(\"h3\", [_vm._v(\"\\n      OS Master\\n    \")])\n          ]),\n          _c(\n            \"template\",\n            { slot: \"thead\" },\n            [\n              _c(\"vs-th\", [_vm._v(\"\\n      Technology Name\\n    \")]),\n              _c(\"vs-th\", [_vm._v(\"\\n      Name\\n    \")]),\n              _c(\"vs-th\", [_vm._v(\"\\n      Tags\\n    \")]),\n              _c(\"vs-th\", [_vm._v(\"\\n      Description\\n    \")]),\n              _c(\"vs-th\", [_vm._v(\"\\n      Actions\\n    \")])\n            ],\n            1\n          )\n        ],\n        2\n      ),\n      _c(\n        \"vs-prompt\",\n        {\n          attrs: {\n            title: \"New entry\",\n            active: _vm.activePrompt,\n            \"is-valid\": _vm.validAddPrompt\n          },\n          on: {\n            \"update:active\": function($event) {\n              _vm.activePrompt = $event\n            },\n            accept: _vm.onSubmit\n          }\n        },\n        [\n          _c(\n            \"vs-select\",\n            {\n              attrs: { label: \"Technology Name\" },\n              model: {\n                value: _vm.addForm.id,\n                callback: function($$v) {\n                  _vm.$set(_vm.addForm, \"id\", $$v)\n                },\n                expression: \"addForm.id\"\n              }\n            },\n            _vm._l(_vm.tech, function(item, index) {\n              return _c(\"vs-select-item\", {\n                key: index,\n                attrs: { value: item, text: item }\n              })\n            }),\n            1\n          ),\n          _c(\"vs-input\", {\n            attrs: {\n              label: \"Name\",\n              placeholder: \"Name\",\n              success: _vm.nameSucc,\n              \"success-text\": \"Valid name.\",\n              danger: !_vm.nameSucc,\n              \"danger-text\":\n                \"Name must be nonempty and be no more than 50 characters.\"\n            },\n            model: {\n              value: _vm.addForm.name,\n              callback: function($$v) {\n                _vm.$set(_vm.addForm, \"name\", $$v)\n              },\n              expression: \"addForm.name\"\n            }\n          }),\n          _c(\"vs-input\", {\n            attrs: {\n              label: \"Tags\",\n              placeholder: \"Tags\",\n              success: _vm.tagSucc,\n              \"success-text\": \"Valid tag.\",\n              danger: !_vm.tagSucc,\n              \"danger-text\": 'Tags must begin with a \"#\".'\n            },\n            model: {\n              value: _vm.addForm.tags,\n              callback: function($$v) {\n                _vm.$set(_vm.addForm, \"tags\", $$v)\n              },\n              expression: \"addForm.tags\"\n            }\n          }),\n          _c(\"vs-input\", {\n            attrs: {\n              label: \"Description\",\n              placeholder: \"Description\",\n              success: _vm.descriptionSucc,\n              \"success-text\": \"Valid description.\",\n              danger: !_vm.descriptionSucc,\n              \"danger-text\":\n                \"Description must be nonempty and be no more than 500 characters.\"\n            },\n            model: {\n              value: _vm.addForm.description,\n              callback: function($$v) {\n                _vm.$set(_vm.addForm, \"description\", $$v)\n              },\n              expression: \"addForm.description\"\n            }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"vs-prompt\",\n        {\n          attrs: { title: \"Edit entry\", active: _vm.editPrompt },\n          on: {\n            \"update:active\": function($event) {\n              _vm.editPrompt = $event\n            },\n            accept: _vm.onSubmitUpdate\n          }\n        },\n        [\n          _c(\n            \"vs-select\",\n            {\n              attrs: { label: \"Technology Name\" },\n              model: {\n                value: _vm.addForm.id,\n                callback: function($$v) {\n                  _vm.$set(_vm.addForm, \"id\", $$v)\n                },\n                expression: \"addForm.id\"\n              }\n            },\n            _vm._l(_vm.tech, function(item, index) {\n              return _c(\"vs-select-item\", {\n                key: index,\n                attrs: { value: item, text: item }\n              })\n            }),\n            1\n          ),\n          _c(\"vs-input\", {\n            attrs: { label: \"Name\", placeholder: \"Name\" },\n            model: {\n              value: _vm.editForm.name,\n              callback: function($$v) {\n                _vm.$set(_vm.editForm, \"name\", $$v)\n              },\n              expression: \"editForm.name\"\n            }\n          }),\n          _c(\"vs-input\", {\n            attrs: { label: \"Tags\", placeholder: \"Tags\" },\n            model: {\n              value: _vm.editForm.tags,\n              callback: function($$v) {\n                _vm.$set(_vm.editForm, \"tags\", $$v)\n              },\n              expression: \"editForm.tags\"\n            }\n          }),\n          _c(\"vs-input\", {\n            attrs: { label: \"Description\", placeholder: \"Description\" },\n            model: {\n              value: _vm.editForm.description,\n              callback: function($$v) {\n                _vm.$set(_vm.editForm, \"description\", $$v)\n              },\n              expression: \"editForm.description\"\n            }\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}