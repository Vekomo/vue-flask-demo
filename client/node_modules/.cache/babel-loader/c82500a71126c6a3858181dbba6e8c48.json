{"remainingRequest":"/home/stylo/new-dir/starter-kit/node_modules/babel-loader/lib/index.js!/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/stylo/new-dir/starter-kit/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stylo/new-dir/starter-kit/src/views/TechMasterTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stylo/new-dir/starter-kit/src/views/TechMasterTables.vue","mtime":1606161634817},{"path":"/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport PathMixins from \"../mixins/pathMixins\";\nexport default {\n  mixins: [PathMixins],\n  data: function data() {\n    return {\n      activePrompt: false,\n      editPrompt: false,\n      nameError: true,\n      tagError: true,\n      descriptionError: true,\n      nameSucc: false,\n      tagSucc: false,\n      descriptionSucc: false,\n      response: [],\n      addForm: {\n        name: '',\n        tags: '',\n        description: ''\n      },\n      editForm: {\n        technology_id: null,\n        technology_name: '',\n        tech_dependant_tags: '',\n        stack_description: ''\n      },\n      message: 'Cannot delete entry, technology name used in child table.'\n    };\n  },\n  computed: {\n    validAddPrompt: function validAddPrompt() {\n      if (this.addForm.name.length > 0 && this.addForm.name.length < 50) {\n        this.nameSucc = true;\n        this.nameError = false;\n      } else {\n        this.nameError = true;\n        this.nameSucc = false;\n      }\n\n      if (this.isValidTag(this.addForm.tags) && this.addForm.tags.length < 2000) {\n        this.tagSucc = true;\n        this.tagError = false;\n      } else {\n        this.tagError = true;\n        this.tagSucc = false;\n      }\n\n      if (this.addForm.description.length > 0 && this.addForm.description.length < 500) {\n        this.descriptionSucc = true;\n        this.descriptionError = false;\n      } else {\n        this.descriptionError = true;\n        this.descriptionSucc = false;\n      }\n\n      if (this.descriptionSucc && this.nameSucc && this.tagSucc) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    //eofunction\n    validEditPrompt: function validEditPrompt() {\n      if (this.editForm.technology_name.length > 0 && this.editForm.technology_name.length < 50) {\n        this.nameSucc = true;\n        this.nameError = false;\n      } else {\n        this.nameSucc = false;\n        this.nameError = true;\n      }\n\n      if (this.descriptionSucc && this.nameSucc && this.tagSucc) {\n        return true;\n      }\n\n      return false;\n    } //eofunction\n\n  },\n  methods: {\n    isValidTag: function isValidTag(tag) {\n      var re = new RegExp('(([\\#])([A-z])+(\\,)*)+');\n\n      if (tag === '') {\n        return false;\n      }\n\n      return re.test(tag);\n    },\n    getTech: function getTech() {\n      var _this = this;\n\n      var path = this.get_tech_path;\n      axios.get(path).then(function (res) {\n        _this.response = res.data.data;\n      }).catch(function (error) {\n        // eslint-disable-next-line\n        console.error(error);\n      });\n    },\n    addTech: function addTech(payload) {\n      var _this2 = this;\n\n      var path = this.add_tech_path;\n      axios.post(path, payload).then(function (res) {\n        _this2.response = res.data.data;\n      }).catch(function (error) {\n        console.log(error);\n\n        _this2.getTech();\n      });\n    },\n    onSubmit: function onSubmit() {\n      var payload = {\n        technology_name: this.addForm.name,\n        tech_dependant_tags: this.addForm.tags,\n        stack_description: this.addForm.description\n      };\n      console.log(payload);\n      this.addTech(payload);\n    },\n    editTech: function editTech(entry) {\n      this.editPrompt = true; //this.editForm = entry;\n\n      this.editForm = Object.assign({}, entry);\n    },\n    onSubmitUpdate: function onSubmitUpdate() {\n      var payload = {\n        technology_id: this.editForm.technology_id,\n        technology_name: this.editForm.name,\n        tech_dependant_tags: this.editForm.tags,\n        stack_description: this.editForm.description\n      };\n      this.updateTech(payload);\n    },\n    // eslint-disable-next-line\n    updateTech: function updateTech(payload, tech_id) {\n      var _this3 = this;\n\n      var path = this.update_tech_path; // eslint-disable-line\n\n      axios.put(path, payload).then(function (res) {\n        _this3.response = res.data.data;\n      }).catch(function (error) {\n        // eslint-disable-next-line\n        console.error(error); // call again if fail? why?\n\n        _this3.getTech();\n      });\n    },\n    // eslint-disable-next-line\n    removeEntry: function removeEntry(tech_id) {\n      var _this4 = this;\n\n      var path = this.delete_tech_path; // eslint-disable-line\n\n      var payload = {\n        technology_id: tech_id\n      };\n      axios.put(path, payload).then(function (response) {\n        if (response.data.status === 500) {\n          _this4.$vs.notify({\n            title: 'Cannot delete entry',\n            text: 'This entries technology name used in child table.',\n            color: 'danger'\n          });\n        } else {\n          _this4.response = response.data.data;\n        }\n      }).catch(function (error) {\n        console.error(error); // call again if fail? why?\n\n        _this4.getTech();\n      });\n    },\n    onDeleteEntry: function onDeleteEntry(entry) {\n      this.removeEntry(entry.technology_id);\n    }\n  },\n  created: function created() {\n    this.getTech();\n  },\n  watch: {\n    response: {\n      handler: function handler() {\n        localStorage.setItem('tech_response', JSON.stringify(this.response));\n      }\n    }\n  }\n};",{"version":3,"sources":["TechMasterTables.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n      <vs-button @click='activePrompt = true' color='primary' type='border'>\n        New\n      </vs-button>\n      <vs-table :data='response'>\n        <template slot='header'>\n        <h3>\n          Tech Master\n        </h3>\n      </template>\n      <template slot ='thead'>\n        <vs-th>\n          Id\n        </vs-th>\n        <vs-th>\n          Name\n        </vs-th>\n        <vs-th>\n          Tags\n        </vs-th>\n        <vs-th>\n          Description\n        </vs-th>\n        <vs-th>\n          Actions\n        </vs-th>\n      </template>\n\n      <template slot-scope='{data}'>\n        <vs-tr :key='index' v-for='(entry, index) in data'>\n          <vs-td :data='data[index].technology_id'>\n            {{data[index].technology_id}}\n          </vs-td>\n          <vs-td :data='data[index].technology_name'>\n            {{data[index].technology_name}}\n          </vs-td>\n          <vs-td :data='data[index].tech_dependant_tags'>\n            {{data[index].technology_name}}\n          </vs-td>\n          <vs-td :data='data[index].stack_description'>\n            {{data[index].stack_description}}\n          </vs-td>\n          <vs-td>\n            <vs-button icon='edit' size='small' @click='editTech(data[index])'></vs-button>\n            <vs-button icon='delete' color='danger' size='small' @click='onDeleteEntry(data[index])'></vs-button>\n          </vs-td>\n\n        </vs-tr>\n      </template>\n      </vs-table>\n      <vs-prompt\n      title='New entry'\n      :active.sync='activePrompt'\n      :is-valid='validAddPrompt'\n      @accept='onSubmit'>\n        <vs-input label='Name' placeholder ='Name' v-model='addForm.name'\n          :success='nameSucc' success-text='Valid name.'\n          :danger='nameError' danger-text='Name must be nonempty and be no more than 50 characters.'/>\n        <vs-input label='Tags' placeholder ='Tags' v-model='addForm.tags'\n          :success='tagSucc' success-text='Valid tag.'\n          :danger='tagError' danger-text='Tags must begin with a \"#\".'/>\n        <vs-input label='Description' placeholder ='Description' v-model='addForm.description'\n          :success='descriptionSucc' success-text='Valid description.'\n          :danger='descriptionError' danger-text='Description must be nonempty and be no more than 500 characters.'/>\n      </vs-prompt>\n      <vs-prompt\n      title='Edit entry'\n      :active.sync='editPrompt'\n      @accept='onSubmitUpdate'>\n        <vs-input label='Name' v-model='editForm.name'\n        :success='nameSucc' success-text='Valid name.'\n        :danger='nameError' danger-text='Name must be nonempty and be no more than 50 characters.'/>\n        <vs-input label='Tags' v-model='editForm.tags'\n        :success='tagSucc' success-text='Valid tag.'\n        :danger='tagError' danger-text='Tags must begin with a \"#\".'/>\n        <vs-input label='Description' v-model='editForm.description'\n        :success='descriptionSucc' success-text='Valid description.'\n        :danger='descriptionError' danger-text='Description must be nonempty and be no more than 500 characters.'/>\n      </vs-prompt>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport PathMixins from '../mixins/pathMixins';\n\nexport default {\n  mixins: [PathMixins],\n\n  data() {\n    return {\n      activePrompt: false,\n      editPrompt: false,\n      nameError: true,\n      tagError: true,\n      descriptionError: true,\n      nameSucc: false,\n      tagSucc: false,\n      descriptionSucc: false,\n      response: [],\n      addForm: {\n        name: '',\n        tags: '',\n        description: '',\n      },\n      editForm: {\n        technology_id: null,\n        technology_name: '',\n        tech_dependant_tags: '',\n        stack_description: '',\n      },\n      message: 'Cannot delete entry, technology name used in child table.',\n    };\n  },\n  computed:{\n    validAddPrompt(){\n      if(this.addForm.name.length > 0 && this.addForm.name.length < 50) {\n        this.nameSucc = true;\n        this.nameError = false;\n      } else {\n        this.nameError = true;\n        this.nameSucc = false;\n      }\n      if(this.isValidTag(this.addForm.tags) && this.addForm.tags.length < 2000) {\n        this.tagSucc = true;\n        this.tagError = false;\n      } else {\n        this.tagError = true;\n        this.tagSucc = false;\n      }\n      if(this.addForm.description.length > 0 && this.addForm.description.length < 500) {\n        this.descriptionSucc = true;\n        this.descriptionError = false;\n      } else {\n        this.descriptionError = true;\n        this.descriptionSucc = false;\n      }\n      if(this.descriptionSucc && this.nameSucc && this.tagSucc) {\n        return true;\n      } else {\n        return false;\n      }\n    }, //eofunction\n    validEditPrompt(){\n      if(this.editForm.technology_name.length > 0 && this.editForm.technology_name.length < 50) {\n        this.nameSucc = true;\n        this.nameError = false;\n      } else {\n        this.nameSucc = false;\n        this.nameError = true;\n      }\n      if(this.descriptionSucc && this.nameSucc && this.tagSucc) {\n        return true;\n      }\n      return false;\n\n    }, //eofunction\n  },\n  methods: {\n    isValidTag(tag) {\n      let re = new RegExp('(([\\#])([A-z])+(\\,)*)+');\n      if (tag === '') {\n        return false;\n      }\n      return re.test(tag);\n    },\n    getTech() {\n      const path = this.get_tech_path;\n      axios.get(path)\n        .then((res) => {\n          this.response = res.data.data;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addTech(payload) {\n      const path = this.add_tech_path;\n      axios.post(path, payload)\n        .then((res) => {\n          this.response = res.data.data;\n        })\n        .catch((error) => {\n          console.log(error);\n          this.getTech();\n        });\n    },\n    onSubmit() {\n\n      const payload = {\n        technology_name: this.addForm.name,\n        tech_dependant_tags: this.addForm.tags,\n        stack_description: this.addForm.description,\n      };\n      console.log(payload);\n      this.addTech(payload);\n    },\n    editTech(entry) {\n      this.editPrompt = true;\n      //this.editForm = entry;\n      this.editForm = Object.assign({}, entry);\n    },\n    onSubmitUpdate() {\n      const payload = {\n        technology_id: this.editForm.technology_id,\n        technology_name: this.editForm.name,\n        tech_dependant_tags: this.editForm.tags,\n        stack_description: this.editForm.description,\n      };\n      this.updateTech(payload);\n    },\n    // eslint-disable-next-line\n    updateTech(payload, tech_id) {\n\n      const path = this.update_tech_path; // eslint-disable-line\n      axios.put(path, payload)\n        .then((res) => {\n          this.response = res.data.data;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          // call again if fail? why?\n          this.getTech();\n        });\n    },\n    // eslint-disable-next-line\n    removeEntry(tech_id) {\n      const path = this.delete_tech_path; // eslint-disable-line\n      const payload = { technology_id: tech_id };\n      axios.put(path, payload)\n        .then((response) => {\n          if (response.data.status === 500) {\n            this.$vs.notify({title:'Cannot delete entry',text:'This entries technology name used in child table.',color:'danger'})\n          } else {\n            this.response = response.data.data;\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n          // call again if fail? why?\n          this.getTech();\n        });\n    },\n    onDeleteEntry(entry) {\n      this.removeEntry(entry.technology_id);\n    },\n  },\n  created() {\n    this.getTech();\n  },\n  watch: {\n    response: {\n      handler() {\n        localStorage.setItem('tech_response', JSON.stringify(this.response));\n      },\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}