{"remainingRequest":"/home/stylo/new-dir/starter-kit/node_modules/babel-loader/lib/index.js!/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/stylo/new-dir/starter-kit/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stylo/new-dir/starter-kit/src/views/OSMasterTables.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stylo/new-dir/starter-kit/src/views/OSMasterTables.vue","mtime":1605658789103},{"path":"/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stylo/new-dir/starter-kit/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport PathMixins from \"../mixins/pathMixins\";\nexport default {\n  mixins: [PathMixins],\n  data: function data() {\n    return {\n      activePrompt: false,\n      editPrompt: false,\n      response: [],\n      tech_id: [],\n      tech_map: {},\n      display_map: {},\n      addForm: {\n        id: null,\n        name: '',\n        tags: '',\n        description: ''\n      },\n      editForm: {\n        technology_id: null,\n        old_name: '',\n        name: '',\n        tags: '',\n        description: ''\n      },\n      tech: []\n    };\n  },\n  methods: {\n    getOS: function getOS() {\n      var _this = this;\n\n      var path = this.get_os_path;\n      axios.get(path).then(function (res) {\n        _this.response = res.data.data;\n\n        for (var i = 0; i < _this.response.length; i += 1) {\n          _this.response[i].technology_id = _this.display_map[_this.response[i].technology_id];\n        }\n      }).catch(function (error) {\n        // eslint-disable-next-line\n        console.error(error);\n      });\n    },\n    addOS: function addOS(payload) {\n      var _this2 = this;\n\n      var path = this.add_os_path;\n      axios.post(path, payload).then(function (res) {\n        _this2.response = res.data.data;\n        console.log(res.data.technology_id);\n\n        for (var i = 0; i < _this2.response.length; i += 1) {\n          _this2.response[i].technology_id = _this2.display_map[_this2.response[i].technology_id];\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this2.getOS();\n      });\n    },\n    onSubmit: function onSubmit() {\n      var payload = {\n        technology_id: this.tech_map[this.addForm.id],\n        OS_technology_name: this.addForm.name,\n        OS_tech_dependant_tags: this.addForm.tags,\n        OS_tech_description: this.addForm.description\n      };\n      console.log(payload);\n      this.addOS(payload);\n    },\n    getTechId: function getTechId() {\n      this.tech_id = JSON.parse(localStorage.getItem('tech_response'));\n      var i;\n\n      for (i = 0; i < this.tech_id.length; i += 1) {\n        if (!this.tech.includes(this.tech_id[i].technology_id)) {\n          this.tech.push(this.tech_id[i].technology_name);\n          this.tech_map[this.tech_id[i].technology_name] = this.tech_id[i].technology_id;\n          this.display_map[this.tech_id[i].technology_id] = this.tech_id[i].technology_name;\n        }\n      }\n    },\n    editOS: function editOS(entry) {\n      this.editPrompt = true;\n      this.editForm = entry;\n      this.editForm.old_name = entry.OS_technology_name;\n    },\n    onSubmitUpdate: function onSubmitUpdate() {\n      var payload = {\n        technology_id: this.tech_map[this.editForm.technology_id],\n        OS_technology_name: this.editForm.old_name,\n        OS_tech_dependant_tags: this.editForm.tags,\n        OS_tech_description: this.editForm.description,\n        New_OS_name: this.editForm.name\n      };\n      this.updateOS(payload);\n    },\n    // eslint-disable-next-line\n    updateOS: function updateOS(payload, os_name) {\n      var _this3 = this;\n\n      var path = this.update_os_path; // eslint-disable-line\n\n      axios.put(path, payload).then(function (res) {\n        _this3.response = res.data.data;\n\n        for (var i = 0; i < _this3.response.length; i += 1) {\n          _this3.response[i].technology_id = _this3.display_map[_this3.response[i].technology_id];\n        }\n      }).catch(function (error) {\n        // eslint-disable-next-line\n        console.error(error);\n\n        _this3.getOS();\n      });\n    },\n    // eslint-disable-next-line\n    removeEntry: function removeEntry(os_name_delete) {\n      var _this4 = this;\n\n      var path = this.delete_os_path; // eslint-disable-line\n\n      var payload = {\n        os_name: os_name_delete\n      };\n      axios.put(path, payload).then(function (res) {\n        _this4.response = res.data.data;\n\n        for (var i = 0; i < _this4.response.length; i += 1) {\n          _this4.response[i].technology_id = _this4.display_map[_this4.response[i].technology_id];\n        }\n      }).catch(function (error) {\n        // eslint-disable-next-line\n        console.error(error);\n\n        _this4.getOS();\n      });\n    },\n    onDeleteEntry: function onDeleteEntry(entry) {\n      this.removeEntry(entry.OS_technology_name);\n    }\n  },\n  created: function created() {\n    this.getTechId();\n    this.getOS();\n    console.log('Succesful.');\n  }\n};",{"version":3,"sources":["OSMasterTables.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n      <vs-button @click='activePrompt = true' color='primary' type='border'>\n        New\n      </vs-button>\n      <vs-table :data='response'>\n        <template slot='header'>\n        <h3>\n          OS Master\n        </h3>\n      </template>\n      <template slot ='thead'>\n        <vs-th>\n          Technology Name\n        </vs-th>\n        <vs-th>\n          Name\n        </vs-th>\n        <vs-th>\n          Tags\n        </vs-th>\n        <vs-th>\n          Description\n        </vs-th>\n        <vs-th>\n          Actions\n        </vs-th>\n      </template>\n\n      <template slot-scope='{data}'>\n        <vs-tr :key='index' v-for='(entry, index) in data'>\n          <vs-td :data='data[index].technology_id'>\n            {{data[index].technology_id}}\n          </vs-td>\n          <vs-td :data='data[index].OS_technology_name'>\n            {{data[index].OS_technology_name}}\n          </vs-td>\n          <vs-td :data='data[index].OS_tech_dependant_tags'>\n            {{data[index].OS_tech_dependant_tags}}\n          </vs-td>\n          <vs-td :data='data[index].OS_tech_description'>\n            {{data[index].OS_tech_description}}\n          </vs-td>\n          <vs-td>\n            <vs-button icon='edit' size='small' @click='editOS(data[index])'></vs-button>\n            <vs-button icon='delete' color='danger' size='small' @click='onDeleteEntry(data[index])'></vs-button>\n          </vs-td>\n\n        </vs-tr>\n      </template>\n      </vs-table>\n      <vs-prompt\n      title='New entry'\n      :active.sync='activePrompt'\n      @accept='onSubmit'>\n        <vs-select\n          label='Technology Name'\n          v-model='addForm.id'>\n          <vs-select-item\n          :key='index'\n          :value='item'\n          :text='item'\n          v-for='item,index in tech' />\n        </vs-select>\n        <vs-input label='Name' placeholder ='Name' v-model='addForm.name'/>\n        <vs-input label='Tags' placeholder ='Tags' v-model='addForm.tags'/>\n        <vs-input label='Description' placeholder ='Description' v-model='addForm.description'/>\n      </vs-prompt>\n      <vs-prompt\n      title='Edit entry'\n      :active.sync='editPrompt'\n      @accept='onSubmitUpdate'>\n        <vs-select\n          label='Technology Name'\n          v-model='addForm.id'>\n          <vs-select-item\n          :key='index'\n          :value='item'\n          :text='item'\n          v-for='item,index in tech' />\n        </vs-select>\n        <vs-input label='Name' placeholder='Name' v-model='editForm.name'/>\n        <vs-input label='Tags' placeholder ='Tags' v-model='editForm.tags'/>\n        <vs-input label='Description' placeholder ='Description' v-model='editForm.description'/>\n      </vs-prompt>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport PathMixins from '../mixins/pathMixins';\n\nexport default {\n  mixins: [PathMixins],\n  data() {\n    return {\n      activePrompt: false,\n      editPrompt: false,\n      response: [],\n      tech_id: [],\n      tech_map: {},\n      display_map: {},\n      addForm: {\n        id: null,\n        name: '',\n        tags: '',\n        description: '',\n      },\n      editForm: {\n        technology_id: null,\n        old_name: '',\n        name: '',\n        tags: '',\n        description: '',\n      },\n      tech: [],\n    };\n  },\n  methods: {\n    getOS() {\n      const path = this.get_os_path;\n      axios.get(path)\n        .then((res) => {\n          this.response = res.data.data;\n\n          for (let i = 0; i < this.response.length; i += 1) {\n            this.response[i].technology_id = this.display_map[this.response[i].technology_id];\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addOS(payload) {\n      const path = this.add_os_path;\n      axios.post(path, payload)\n        .then((res) => {\n          this.response = res.data.data;\n          console.log(res.data.technology_id);\n          for (let i = 0; i < this.response.length; i += 1) {\n            this.response[i].technology_id = this.display_map[this.response[i].technology_id];\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          this.getOS();\n        });\n    },\n    onSubmit() {\n\n      const payload = {\n        technology_id: this.tech_map[this.addForm.id],\n        OS_technology_name: this.addForm.name,\n        OS_tech_dependant_tags: this.addForm.tags,\n        OS_tech_description: this.addForm.description,\n      };\n      console.log(payload);\n      this.addOS(payload);\n    },\n    getTechId() {\n      this.tech_id = JSON.parse(localStorage.getItem('tech_response'));\n      let i;\n      for (i = 0; i < this.tech_id.length; i += 1) {\n        if (!this.tech.includes(this.tech_id[i].technology_id)) {\n          this.tech.push(this.tech_id[i].technology_name);\n          this.tech_map[this.tech_id[i].technology_name] = this.tech_id[i].technology_id;\n          this.display_map[this.tech_id[i].technology_id] = this.tech_id[i].technology_name;\n        }\n      }\n    },\n    editOS(entry) {\n      this.editPrompt = true;\n      this.editForm = entry;\n      this.editForm.old_name = entry.OS_technology_name;\n    },\n    onSubmitUpdate() {\n\n      const payload = {\n        technology_id: this.tech_map[this.editForm.technology_id],\n        OS_technology_name: this.editForm.old_name,\n        OS_tech_dependant_tags: this.editForm.tags,\n        OS_tech_description: this.editForm.description,\n        New_OS_name: this.editForm.name,\n      };\n      this.updateOS(payload);\n    },\n    // eslint-disable-next-line\n    updateOS(payload, os_name) {\n\n      const path = this.update_os_path; // eslint-disable-line\n      axios.put(path, payload)\n        .then((res) => {\n          this.response = res.data.data;\n\n          for (let i = 0; i < this.response.length; i += 1) {\n            this.response[i].technology_id = this.display_map[this.response[i].technology_id];\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          this.getOS();\n        });\n    },\n    // eslint-disable-next-line\n    removeEntry(os_name_delete) {\n      const path = this.delete_os_path; // eslint-disable-line\n      const payload = { os_name: os_name_delete };\n      axios.put(path, payload)\n        .then((res) => {\n          this.response = res.data.data;\n\n          for (let i = 0; i < this.response.length; i += 1) {\n            this.response[i].technology_id = this.display_map[this.response[i].technology_id];\n          }\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          this.getOS();\n        });\n    },\n    onDeleteEntry(entry) {\n      this.removeEntry(entry.OS_technology_name);\n    },\n  },\n  created() {\n    this.getTechId();\n    this.getOS();\n\n    console.log('Succesful.');\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}